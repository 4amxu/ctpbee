
.. _策略以及数据录入:

策略以及数据录入
======================
两者核心都来自于ExtAbstract
继承此类::

    from ctpbee import ExtAbstract

    class HelloWorld(ExtAbstract):
        def __init__(self, name, app=None):
            super().__init__(name, app)  # 无论你做啥,记得执行这一句
            # 你可以扩充参数,但是请记得name和app是必须要的

        def on_tick(tick):
            pass

        def on_account(account):
            pass

        def on_bar(bar):
            pass

        def on_trade(trade):
            pass

        def on_position(position):
            pass

        def on_order(order):
            pass

    app = CtpBee("world", __name__)

    hello = HelloWord("hello", app)
    info = {
        "CONNECT_INFO": {
            "userid": "",
            "password": "",
            "brokerid": "",
            "md_address": "",
            "td_address": "",
            "appid": "",
            "auth_code": "",
        },
        "TD_FUNC": True,  # 开启交易功能
    }
    app.config.from_mapping(info) # 载入配置文件

    app.start()  # 开始执行




数据录入
-------------------
根据上面的所展示的层, 一切变得自由与简单,你可以通过在on_tick和on_bar下面编写相关代码将数据写入数据库即可





策略开发准则
-------------------
这里是开发策略准则
每个插件都是相互独立的,  可以实现多个策略的互相计算, 在HelloWord内你可以使用self.app来调用CtpBee对象进行操作。

待补充.....

